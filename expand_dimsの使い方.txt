def gaussian_filter(img, K_size=3, sigma=1.3):
	if len(img.shape) == 3:
		H, W, C = img.shape
	else:
		img = np.expand_dims(img, axis=-1)
		H, W, C = img.shape

というプログラムでnp.expand_dims(img, axis=-1)がわからなかった
ので、調べた結果を記す.

import numpy as np

img = np.zeros((100, 100, 3), dtype=float)
print(img.shape)  # (100, 100, 3)
というプログラムにおいて
Axis: Dim
0   : 100
1   : 100
2   : 3
となる.
np.expand_dims() は、第2引数の axis で指定した場所の直前に
dim=1 を挿入する。負の値の場合は、Python の添字記法と同じ末尾からの参照になる
(参考:https://teratail.com/questions/146318)

_img = np.expand_dims(img, axis=0)
print(_img.shape)  # (1, 100, 100, 3)

_img = np.expand_dims(img, axis=1)
print(_img.shape)  # (100, 1, 100, 3)

_img = np.expand_dims(img, axis=2)
print(_img.shape)  # (100, 100, 1, 3)

_img = np.expand_dims(img, axis=3)
print(_img.shape)  # (100, 100, 3, 1)

_img = np.expand_dims(img, axis=-1)
print(_img.shape)  # (100, 100, 3, 1)

_img = np.expand_dims(img, axis=-2)
print(_img.shape)  # (100, 100, 3, 1)

_img = np.expand_dims(img, axis=-3)
print(_img.shape)  # (100, 1, 100, 3)

_img = np.expand_dims(img, axis=-4)
print(_img.shape)  # (1, 100, 100, 3)
